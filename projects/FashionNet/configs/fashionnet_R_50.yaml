MODEL:
  META_ARCHITECTURE: "FashionNet"
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  #WEIGHTS: "output/model_0074999.pth"
  MASK_ON: False
  KEYPOINT_ON: False
  BACKBONE:
    NAME: "build_resnet_backbone"
  RESNETS:
    DEPTH: 50
    #OUT_FEATURES: ["res3", "res4", "res5"]
    OUT_FEATURES: ["res5"]
  ANCHOR_GENERATOR:
    #SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [32, 64, 128, 256, 512 ]]"]
    SIZES: [[32, 64, 128, 256, 512]]
#  FPN:
#    IN_FEATURES: ["res3", "res4", "res5"]
  RETINANET:
    IN_FEATURES: ["res5"]
    NUM_CLASSES: 13
    IOU_THRESHOLDS: [0.4, 0.5]
    IOU_LABELS: [0, -1, 1]
DATASETS:
  TRAIN: ("fashion_train_5w",)
  #TRAIN: ("fashion_train_test",)
  TEST: ("fashion_train_test",)
DATALOADER:
  SAMPLER_TRAIN: "RepeatFactorTrainingSampler"
  REPEAT_THRESHOLD: 0.25
SOLVER:
  IMS_PER_BATCH: 16
  BASE_LR: 0.001  # Note that RetinaNet uses a different default learning rate
  STEPS: (60000, 80000)
  MAX_ITER: 90000
INPUT:
  MIN_SIZE_TRAIN: (640, 672, 704, 736, 768, 800)
  #MIN_SIZE_TRAIN_SAMPLING: "choice"
OUTPUT_DIR: "./output"
VERSION: 2