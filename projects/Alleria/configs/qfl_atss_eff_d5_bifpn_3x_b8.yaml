MODEL:
  META_ARCHITECTURE: "OneStageDetector"
#  WEIGHTS: "detectron2://ImageNetPretrained/FAIR/X-101-32x8d.pkl"
#  WEIGHTS: "output/FCOS_MS_X_101_32x8d_dcnv2_2x.pth"
#  WEIGHTS: "https://hangzh.s3-us-west-1.amazonaws.com/encoding/models/resnest101_detectron-486f69a8.pth"
  WEIGHTS: "https://github.com/zylo117/Yet-Another-Efficient-Pytorch/releases/download/1.0/efficientdet-d5.pth"
  MASK_ON: False
  KEYPOINT_ON: False
  PIXEL_STD: [57.375, 57.120, 58.395]
  BACKBONE:
    NAME: "build_efficientnet_bifpn_backbone"
  EFFICIENTNET:
    COMPOUND_COEFFICIENT: 5
    OUT_FEATURES: ['p3', 'p4', 'p5']
    # can't use GN, because of the channel can not be divided by 32
    NORM: "SyncBN"
  BIFPN:
    IN_FEATURES: ["p3", "p4", "p5"]
    NORM: "SyncBN"
  PROPOSAL_GENERATOR:
    NAME: "QFLATSS"
  ATSS:
    NUM_CLASSES: 1
    INFERENCE_TH: 0.4
    NMS_TH: 0.5
    POSITIVE_TYPE: 'ATSS' # how to select positves: ATSS (Ours) , SSC (FCOS), IoU (RetinaNet)
    TOPK: 9 # topk for selecting candidate positive samples from each level
    REGRESSION_TYPE: 'BOX' # regressing from a 'BOX' or a 'POINT'
    POST_NMS_TOPK_TEST: 120
    HEAD: "dw"    
    NORM: "SyncBN"
  ANCHOR_GENERATOR:
    SIZES: [[64], [128], [256], [512], [1024]]  # One size for each in feature map 8S
    ASPECT_RATIOS: [[1.0,]]  # Three aspect ratios (same for all in feature maps)
    ANGLES: [[0,]]
    OFFSET: 0.0
DATASETS:
  TRAIN: ("wheat_coco_train",)
  TEST: ("wheat_coco_val",)
DATALOADER:
  MOSAIC_PROB: 0.33
  MIXUP_PROB: 0.34
  CUTOUT_PROB: 0.0
SOLVER:
  IMS_PER_BATCH: 8
  BASE_LR: 0.01
  WARMUP_FACTOR: 0.00125
  WARMUP_ITERS: 800
  STEPS: (12000, 16000)
  MAX_ITER: 18000
  CHECKPOINT_PERIOD: 2000
INPUT:
  CROP:
    ENABLED: False
  MIN_SIZE_TRAIN: (864, 896, 928, 960, 992, 1024)
  MAX_SIZE_TEST: 1024
  MIN_SIZE_TEST: 1024
TEST:
  EVAL_PERIOD: 2000
  AUG:
    ENABLED: True
    MIN_SIZES: (1024,)
    MAX_SIZE: 1024
    FLIP: True
    VERTICAL_FLIP: True
OUTPUT_DIR: "output/qfl_atss_eff_d5_bifpn_3x_b8"
VERSION: 2

